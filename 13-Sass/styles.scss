@mixin formato-texto($bg-color: #f1f1f1) { // Le podemos indicar un valor por defecto poniendole los 2 puntos o dejarlo vacío para que sea obligatorio pasarle al llamarla
    color: $text-color;
    text-transform: uppercase;
    width: 50rem;
    background-color: $bg-color;
}
// Mixin, se definen con un arroba y después ponemos el nombre
// Además de poder guardar varias configuraciones, pueden aceptar parametros
// Le pasamos los parametros y decimos a que devería aplicarse, luego al "llamar a la función" debemos pasarle los o el valor.

$text-color: #2b2b2b;
// Así se declaran las variables en scss
body {
    padding: 0;
    margin: 0;
}

.container {
    width: 100%;
    background-color: azure;
    min-height: 100vh;
    padding: .5rem;
}

h1 {
    margin: 0;
    @include formato-texto();
}

p {
    @include formato-texto(#666666);
}

// Si (por ejemplo) tenemos una lista, sass nos permite "anidar" entre ellos de una manera más "legible"
.listado {
    width: 10rem;
    background-color: aquamarine;
    padding: .5rem;
    
    ul {
        margin: 0 .5rem;

        li {
            list-style: none;
// Podemos también hacer uso de subclases como hover, after, before, etc. añdiendo según que querramos afectar en la anidación, '&:hover'
            &:hover {
                color: white;
            }
        }
    }
}